name: CI Pipeline

on:
  push:
    branches:
      - master
      - dev/ci_pipeline
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash -l {0}
    working-directory: .

jobs:

  style-test:
    name: Style Test (flake8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          allow-softlinks: true
          show-channel-urls: true
          use-only-tar-bz2: true
          environment-file: environment.yml
          activate-environment: fsds
          use-mamba: true

      - name: Run flake8
        shell: bash -l {0}  # Ensures conda activation is respected
        run: |
          flake8 .

  test:
    name: Unit & Functional Tests
    runs-on: ubuntu-latest
    needs: style-test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          allow-softlinks: true
          show-channel-urls: true
          use-only-tar-bz2: true
          environment-file: environment.yml
          activate-environment: fsds
          use-mamba: true

      - name: Install package in dev mode
        run: |
          conda activate fsds
          pip install -e .

      - name: Run data ingestion
        run: python scripts/ingest_data.py

      - name: Run training (generates processed data)
        run: python scripts/train.py

      - name: Run pytest
        run: |
          conda activate fsds
          pytest --exitfirst --disable-warnings

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          allow-softlinks: true
          show-channel-urls: true
          use-only-tar-bz2: true
          environment-file: environment.yml
          activate-environment: fsds
          use-mamba: true

      - name: Install tree CLI
        run: sudo apt-get install tree

      - name: Show directory before build
        run: tree -L 2

      - name: Build the package
        run: |
          conda activate fsds
          python -m pip install build
          python -m build

      - name: Show directory after build
        run: tree -L 2

      - name: Upload build artifacts and environment.yml
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            environment.yml

  install:
    name: Install & Run Scripts
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: artifacts

      - name: Set up Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          allow-softlinks: true
          show-channel-urls: true
          use-only-tar-bz2: true
          environment-file: environment.yml
          activate-environment: fsds
          use-mamba: true

      - name: Install built package
        run: |
          conda activate fsds
          pip install artifacts/dist/*.whl

      - name: Run workflow scripts with timestamp
        run: |
          conda activate fsds
          echo "$(date +'%Y-%m-%d %H:%M:%S') - Running CI script"
          python main.py
